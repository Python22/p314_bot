from aiogram import Router, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, ReplyKeyboardRemove
import requests
import httpx
import aiohttp
from datetime import datetime
import asyncio

from keyboards.common_keyboards import main_keyboard
from states import UserStates


router = Router()


@router.message(UserStates.user_choice_button, F.text.lower() == "–ø–æ–≥–æ–¥–∞")
async def need_weather(message: Message, state: FSMContext):
    await message.answer(
        text="–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤ –Ω—ë–º –ø–æ–≥–æ–¥—É:",
        reply_markup=ReplyKeyboardRemove()
    )
    await state.set_state(UserStates.user_choice_city)


@router.message(UserStates.user_choice_city, F.text)
async def get_weather(message: Message, state: FSMContext):
    city = message.text
    try:
        url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid=024e2078c2ad10abfde94667edee771d&units=metric&lang=ru"
        weather_data = httpx.get(url=url).json()
        if weather_data["cod"] == 404:
            await message.answer("–¢–∞–∫–æ–π –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω...–î–∞–π –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥üôÉ")
            return
        print(weather_data)
        # longitude = weather_data["coord"]["lon"]
        longitude, latitude = weather_data["coord"].values()
        weather = weather_data["weather"][0]["description"]
        temperature = weather_data["main"]["temp"]
        feel_like = weather_data["main"]["feels_like"]
        pressure = weather_data["main"]["pressure"]
        humidity = weather_data["main"]["humidity"]
        wind_speed = weather_data["wind"]["speed"]
        wind_direction = weather_data["wind"]["deg"]
        clouds_percentage = weather_data["clouds"]["all"]
        sunrise = datetime.fromtimestamp(weather_data["sys"]["sunrise"])
        sunset = datetime.fromtimestamp(weather_data["sys"]["sunset"])
        await message.reply(
            text=f"–ì–æ—Ä–æ–¥: {city}\n"
                 f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature} ¬∞C\n"
                 f"–ö–∞–∫ –æ—â—É—â–∞–µ—Ç—Å—è: {feel_like} ¬∞C\n"
                 f"–û–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {weather}\n"
                 f"–ü—Ä–æ—Ü–µ–Ω—Ç –æ–±–ª–∞—á–Ω–æ—Å—Ç–∏: {clouds_percentage} %\n"
                 f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å\n"
                 f"–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞(–∞–∑–∏–º—É—Ç): {wind_direction}\n"
                 f"–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –ü–∞\n"
                 f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity} %\n"
                 f"–®–∏—Ä–æ—Ç–∞: {latitude}\n"
                 f"–î–æ–ª–≥–æ—Ç–∞: {longitude}\n"
                 f"–í–æ—Å—Ö–æ–¥ (–ø–æ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏): {sunrise}\n"
                 f"–ó–∞–∫–∞—Ç (–ø–æ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏): {sunset}\n"
                 f"–í–æ—Å—Ö–æ–¥ (–ø–æ –ú–µ—Å—Ç–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏): {sunrise}\n"
                 f"–ó–∞–∫–∞—Ç (–ø–æ –ú–µ—Å—Ç–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏): {sunset}\n",
            reply_markup=main_keyboard()
        )
        await state.clear()
    except Exception as e:
        print(e, type(e), e.args, e)
        await message.answer("üòì–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...–î–∞–π –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥üò®")


